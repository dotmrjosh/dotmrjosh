---
export const prerender = false;
export const partial = true;

Astro.response.headers.set("Content-Type", "image/svg+xml; charset=utf-8");

const WIDTH = 1400;
const HEIGHT = 1400;

const tiles: [string, number][] = [];

for (let i = 0; i < 365; i++) {
  const date = new Date();
  date.setDate(date.getDate() - i);

  const key = date.toISOString().split("T")[0];
  const day: [string, number] = [key, 0];
  // if (keyed && key in keyed) {
  //   day[1] += keyed[key];
  // }
  // Testing
  day[1] += Math.floor(Math.random() * 100)

  tiles.push(day);
}
---

<svg 
  width={WIDTH}
  height={HEIGHT}
  viewBox={`0 0 ${WIDTH} ${HEIGHT}`}
  xmlns="http://www.w3.org/2000/svg"
>
  {tiles.map(([key, contribs], index) => {
    const row = Math.floor(index / 7);
    const col = index % 7;
    const y = col * (14 + 4);
    const x = row * (14 + 4);
    
    return (
      <rect
        key={key}
        x={x}
        y={y}
        width={14}
        height={14}
        rx={4}
        ry={4}
        fill={`hsl(300 ${Math.min(contribs, 70)}% ${Math.max(16, Math.min(contribs, 70))}%)`}
      />
    );
  })}
</svg>
